@page "/storage"
@using DocuStorageApi.Shared.DTOs
@using MudBlazor;
@using DocuStorageApi.Shared;
@using Mapster;
@using Microsoft.AspNetCore.Components.Web;
@using System.Text.Json

@if (dto is not null)
{
    <h3>Document Storage for <i>@dto.Name</i></h3>

    <MudContainer MaxWidth="MaxWidth.Small">
        <MudSelect Label="Tenants" class="mt-4" T="string" Variant="Variant.Outlined">
            <MudSelectItem Value="@("Albert")" />
            <MudSelectItem Value="@("Ray")" />
        </MudSelect>

        <MudFileUpload T="IBrowserFile"  FilesChanged="UploadFiles">
            <ButtonTemplate>
                <MudButton Class="mt-4 mr-4 mb-4" HtmlTag="label"
                           Variant="Variant.Filled"
                           StartIcon="@Icons.Material.Filled.CloudUpload"
                           For="@context">
                    Upload Files
                </MudButton>
            </ButtonTemplate>
        </MudFileUpload>
     </MudContainer>


    <MudDataGrid Items="@dto.Files">
        <Columns>
            <PropertyColumn Property="x => x.Id" Title="Id" Format="0" />
                <PropertyColumn Property="x => x.Name" />
            <TemplateColumn Title="Path"> 
			    <CellTemplate>
                    <MudLink Style="color: var(--mud-palette-text-primary)!important" OnClick="@(() => DownloadFile(context.Item))">@context.Item.Path</MudLink>
                </CellTemplate> 
		    </TemplateColumn>
            <PropertyColumn Property="x => x.SizeBytes" Title="Size in Bytes" Format="0.0" />
            <TemplateColumn>
                <CellTemplate>
                        <MudIconButton Size="Size.Small"
                                        OnClick="() => DeleteFile(context.Item.Id)"
                                        Icon="@Icons.Material.Outlined.Delete"
                                        Variant="Variant.Filled" />
                </CellTemplate>
            </TemplateColumn>  
        </Columns>
    </MudDataGrid>
}




